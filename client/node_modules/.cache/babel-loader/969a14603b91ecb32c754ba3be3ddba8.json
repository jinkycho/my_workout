{"ast":null,"code":"import * as actions from '../_actions/types';\nconst workoutState = [{\n  id: '0',\n  title: '산책',\n  time: '00:50',\n  date: new Date(2020, 7, 14)\n}, {\n  id: '1',\n  title: '테니스',\n  time: '00:50',\n  date: new Date(2021, 2, 12)\n}, {\n  id: '2',\n  title: '테니스',\n  time: '01:10',\n  date: new Date(2021, 2, 28)\n}, {\n  id: '3',\n  title: '산책',\n  time: '01:50',\n  date: new Date(2021, 5, 12)\n}];\n\nconst nextWorkoutId = workouts => {\n  const maxId = workouts.reduce((maxId, workout) => Math.max(workout.id, maxId), -1);\n  return maxId + 1;\n};\n\nexport default function workoutReducer(state = workoutState, action) {\n  switch (action.type) {\n    case actions.WORKOUT_ADDED:\n      const workout = action.payload;\n      return { ...state,\n        workouts: { ...state.workouts,\n          workout\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/localhost/Desktop/test/study/client/src/_reducers/workoutsSlice.js"],"names":["actions","workoutState","id","title","time","date","Date","nextWorkoutId","workouts","maxId","reduce","workout","Math","max","workoutReducer","state","action","type","WORKOUT_ADDED","payload"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,mBAAzB;AAEA,MAAMC,YAAY,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,IAAI,EAAE,OAHR;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CADiB,EAOjB;AACEJ,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,KAAK,EAAE,KAFT;AAGEC,EAAAA,IAAI,EAAE,OAHR;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAPiB,EAYjB;AACEJ,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,KAAK,EAAE,KAFT;AAGEC,EAAAA,IAAI,EAAE,OAHR;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAZiB,EAkBjB;AACEJ,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,IAAI,EAAE,OAHR;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAlBiB,CAArB;;AA0BA,MAAMC,aAAa,GAAGC,QAAQ,IAAI;AAC9B,QAAMC,KAAK,GAAGD,QAAQ,CAACE,MAAT,CAAgB,CAACD,KAAD,EAAQE,OAAR,KAAoBC,IAAI,CAACC,GAAL,CAASF,OAAO,CAACT,EAAjB,EAAqBO,KAArB,CAApC,EAAiE,CAAC,CAAlE,CAAd;AACA,SAAOA,KAAK,GAAG,CAAf;AACH,CAHD;;AAKA,eAAe,SAASK,cAAT,CAAwBC,KAAK,GAAGd,YAAhC,EAA8Ce,MAA9C,EAAqD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,OAAO,CAACkB,aAAb;AACE,YAAMP,OAAO,GAAGK,MAAM,CAACG,OAAvB;AACE,aAAO,EACH,GAAGJ,KADA;AAEHP,QAAAA,QAAQ,EAAG,EACP,GAAGO,KAAK,CAACP,QADF;AAEPG,UAAAA;AAFO;AAFR,OAAP;;AAOJ;AACI,aAAOI,KAAP;AAXR;AAaH","sourcesContent":["import * as actions from '../_actions/types';\n\nconst workoutState = [\n    {\n      id: '0',\n      title: '산책',\n      time: '00:50',\n      date: new Date(2020, 7, 14),\n    },\n    { \n      id: '1', \n      title: '테니스',\n      time: '00:50',\n      date: new Date(2021, 2, 12) },\n    {\n      id: '2',\n      title: '테니스',\n      time: '01:10',\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: '3',\n      title: '산책',\n      time: '01:50',\n      date: new Date(2021, 5, 12),\n    }\n  ]\n\nconst nextWorkoutId = workouts => {\n    const maxId = workouts.reduce((maxId, workout) => Math.max(workout.id, maxId), -1);\n    return maxId + 1;    \n};\n\nexport default function workoutReducer(state = workoutState, action){\n    switch (action.type) {\n        case actions.WORKOUT_ADDED:\n          const workout = action.payload \n            return {\n                ...state,\n                workouts : {\n                    ...state.workouts,\n                    workout\n                }\n              }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}
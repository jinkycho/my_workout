{"ast":null,"code":"var _jsxFileName = \"/Users/localhost/Desktop/test/study/src/components/TimePicker/TimePicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TimePicker(props) {\n  _s();\n\n  const [clickedHour, setClickedHour] = useState(0);\n  const [clickedMinutes, setClickedMinutes] = useState(0);\n  const StyledTimePicker = styled.div`\n        display: flex;\n        height: 100px;\n        margin: 1rem 0;\n\n        & .TimePicker__hour,\n        & .TimePicker__minute{\n            display: flex;\n            flex-direction: column;\n            overflow-y: scroll;\n        }\n\n        & button{\n            border: none;\n            cursor: pointer;\n            background: #fff;\n            font-size: 16px;\n            color: #d2d2d2;\n\n        }\n\n        & .clicked{\n            color : #333;\n            font-weight: bold;\n        }\n    `;\n\n  const hourClickHandler = hour => {\n    setClickedHour(hour);\n  };\n\n  const minuteClickHandler = minutes => {\n    setClickedMinutes(minutes);\n\n    if (clickedHour !== '') {\n      let settingHour = clickedHour < 10 ? '0' + clickedHour : clickedHour;\n      let settingMinutes = minutes < 10 ? '0' + minutes : minutes;\n      props.onTimeHandler(settingHour + ':' + settingMinutes);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTimePicker, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TimePicker__hour\",\n      children: [...Array(12)].map((v, hour) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => hourClickHandler(hour),\n        className: clickedHour === hour ? 'clicked' : '',\n        children: [hour, \"\\uC2DC\\uAC04\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TimePicker__minute\",\n      children: [...Array(60)].map((v, minutes) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => minuteClickHandler(minutes),\n        className: clickedMinutes === minutes ? 'clicked' : '',\n        children: [minutes, \"\\uBD84\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimePicker, \"WIrosROalUrOWzo+ehcchrMq8D4=\");\n\n_c = TimePicker;\nexport default TimePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimePicker\");","map":{"version":3,"sources":["/Users/localhost/Desktop/test/study/src/components/TimePicker/TimePicker.js"],"names":["React","useState","styled","TimePicker","props","clickedHour","setClickedHour","clickedMinutes","setClickedMinutes","StyledTimePicker","div","hourClickHandler","hour","minuteClickHandler","minutes","settingHour","settingMinutes","onTimeHandler","Array","map","v"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,CAAD,CAApD;AAEA,QAAMQ,gBAAgB,GAAGP,MAAM,CAACQ,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAzBI;;AA2BA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AAC/BN,IAAAA,cAAc,CAACM,IAAD,CAAd;AACH,GAFD;;AAIA,QAAMC,kBAAkB,GAAIC,OAAD,IAAY;AACnCN,IAAAA,iBAAiB,CAACM,OAAD,CAAjB;;AAEA,QAAGT,WAAW,KAAK,EAAnB,EAAsB;AAClB,UAAIU,WAAW,GAAGV,WAAW,GAAG,EAAd,GAAmB,MAAMA,WAAzB,GAAuCA,WAAzD;AACA,UAAIW,cAAc,GAAGF,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAApD;AACAV,MAAAA,KAAK,CAACa,aAAN,CAAoBF,WAAW,GAAG,GAAd,GAAoBC,cAAxC;AACH;AACJ,GARD;;AAUA,sBACI,QAAC,gBAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACK,CAAC,GAAGE,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,CAACC,CAAD,EAAGR,IAAH,kBAChB;AACI,QAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACC,IAAD,CADnC;AAEI,QAAA,SAAS,EAAEP,WAAW,KAAKO,IAAhB,GAAuB,SAAvB,GAAmC,EAFlD;AAAA,mBAGKA,IAHL;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACK,CAAC,GAAGM,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,CAACC,CAAD,EAAGN,OAAH,kBAChB;AACI,QAAA,OAAO,EAAE,MAAMD,kBAAkB,CAACC,OAAD,CADrC;AAEI,QAAA,SAAS,EAAEP,cAAc,KAAKO,OAAnB,GAA6B,SAA7B,GAAwC,EAFvD;AAAA,mBAGKA,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GApEQX,U;;KAAAA,U;AAsET,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport styled from 'styled-components';\n\nfunction TimePicker(props) {\n    \n    const [clickedHour, setClickedHour] = useState(0);\n    const [clickedMinutes, setClickedMinutes] = useState(0);\n\n    const StyledTimePicker = styled.div`\n        display: flex;\n        height: 100px;\n        margin: 1rem 0;\n\n        & .TimePicker__hour,\n        & .TimePicker__minute{\n            display: flex;\n            flex-direction: column;\n            overflow-y: scroll;\n        }\n\n        & button{\n            border: none;\n            cursor: pointer;\n            background: #fff;\n            font-size: 16px;\n            color: #d2d2d2;\n\n        }\n\n        & .clicked{\n            color : #333;\n            font-weight: bold;\n        }\n    `;\n\n    const hourClickHandler = (hour) => {\n        setClickedHour(hour);\n    }\n\n    const minuteClickHandler = (minutes) =>{\n        setClickedMinutes(minutes);\n\n        if(clickedHour !== ''){\n            let settingHour = clickedHour < 10 ? '0' + clickedHour : clickedHour;\n            let settingMinutes = minutes < 10 ? '0' + minutes : minutes;\n            props.onTimeHandler(settingHour + ':' + settingMinutes);\n        }\n    } \n\n    return (\n        <StyledTimePicker>\n            <div className=\"TimePicker__hour\">\n                {[...Array(12)].map((v,hour) => \n                    <button \n                        onClick={() => hourClickHandler(hour)} \n                        className={clickedHour === hour ? 'clicked' : ''}>\n                        {hour}시간\n                    </button>)}\n            </div>\n            \n            <div className=\"TimePicker__minute\">\n                {[...Array(60)].map((v,minutes) => \n                    <button\n                        onClick={() => minuteClickHandler(minutes)}\n                        className={clickedMinutes === minutes ? 'clicked': ''}>\n                        {minutes}분\n                    </button>)}\n            </div>\n            \n        </StyledTimePicker>\n    )\n}\n\nexport default TimePicker\n"]},"metadata":{},"sourceType":"module"}
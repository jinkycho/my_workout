{"version":3,"sources":["components/Workouts/WorkoutDate.js","components/UI/Card.js","components/Workouts/WorkoutItem.js","_actions/actions.js","components/UI/Button.js","components/Workouts/WorkoutList.js","components/Workouts/WorkoutFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Workouts/WorkoutChart.js","_reducers/videoSlice.js","_actions/types.js","_reducers/workoutsSlice.js","_reducers/filterSlice.js","_reducers/reducers.js","_store/store.js","components/Workouts/Workouts.js","components/TimePicker/TimePicker.js","components/NewWorkout/WorkoutForm.js","components/NewWorkout/NewWorkout.js","components/Videos/Videos.js","components/Header/Navigation.js","App.js","reportWebVitals.js","_sagas/request/videoRequest.js","_sagas/handler/videoHandler.js","_sagas/sagas.js","index.js"],"names":["WorkoutDate","date","month","toLocaleString","day","year","getFullYear","Card","styled","div","WorkoutItem","workout","dispatch","useDispatch","StyledWorkoutItem","li","className","title","time","onClick","workoutId","id","type","payload","deleteWorkout","icon","faTrashAlt","Button","button","WorkoutList","workouts","renderedListItems","map","length","StyledWorkoutList","ul","WorkoutFilter","props","StyledWorkoutFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","WorkoutChart","chartDataPoints","console","log","workoutTime","hourSlice","slice","timeSlice","timeCal","parseInt","getMonth","GET_VEDIOS","SET_VIDEOS","initialState","videoList","WORKOUT_ADDED","WORKOUT_DELETED","workoutState","Date","videoFilters","SET_FILTER","filter","preloadedState","rootReducer","combineReducers","state","action","actions","workoutData","item","videos","filters","changeType","exisitingFilter","persistedWorkoutsString","localStorage","getItem","JSON","parse","store","createStore","Workouts","getState","useSelector","useState","filteredYear","setFilteredYear","sort","a","b","fiteredWorkout","toString","selectedYear","TimePicker","clickedHour","setClickedHour","clickedMinutes","setClickedMinutes","StyledTimePicker","Array","v","hour","hourClickHandler","minutes","settingHour","settingMinutes","onTimeHandler","minuteClickHandler","WorkoutForm","enteredTitle","setEnteredTitle","enteredTime","setEnteredTime","enteredDate","setEnteredDate","onSubmit","preventDefault","createdWorkoutId","onSaveWorkoutData","alert","offAddWorkout","min","step","NewWorkout","isOpen","setIsOpen","StyledNewWork","status","Videos","keyword","setKeyword","StyledVideopage","opts","height","width","loadVideos","getVideos","renderFilters","index","renderVideos","videoId","Navigation","match","StyeldNavigation","nav","recordActive","setRecordActive","videoActive","setVideoActive","params","useHistory","useEffect","location","pathname","isActive","active","to","App","setWorkouts","exact","path","onAddWorkout","prevWorkouts","items","onDeleteWorkout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","requestGetVideos","axios","request","method","url","handleGetVideos","call","response","data","put","rootSaga","watcherSaga","all","takeLatest","sagaMiddleware","createSagaMiddleware","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32b639aa.chunk.js","sourcesContent":["import React from 'react'\n\nfunction WorkoutDate({date}) {\n\n    const month = date.toLocaleString('en-US', {month: 'short'});\n    const day = date.toLocaleString('en-US', { day: '2-digit'});\n    const year = date.getFullYear();\n    \n    return (\n    <div>\n        <div>{month}</div>\n        <div>{day}</div>\n        <div>{year}</div>\n    </div>\n    )\n}\n\nexport default WorkoutDate\n","import styled from 'styled-components';\n\n\n    const Card = styled.div`\n        margin: auto;\n        box-shadow: 2px 5px 10px rgba(0, 0, 0, 0.3);\n        border-radius: 10px;\n    `;\n\n\nexport default Card\n","import React, { useState } from 'react'\nimport WorkoutDate from './WorkoutDate';\nimport Card from '../UI/Card';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faEdit} from '@fortawesome/free-solid-svg-icons'\nimport { deleteWorkout } from '../../_actions/actions';\nimport { useDispatch } from 'react-redux';\n\nfunction WorkoutItem({workout}) {\n\n    const dispatch = useDispatch();\n\n    const StyledWorkoutItem = styled.li`\n        background: #333;\n        color: #fff;\n        margin-bottom: 10%;\n        border-radius: 10px;\n\n        &:nth-child(2n){\n            background: #fff;\n            color: #333;\n        }\n\n        & .workout-item{\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 5% 0;\n            flex-grow: 1;\n        }\n\n\n        & .workout-item__date{\n            padding: 0 3%;\n            font-size: 13px;\n            font-weight: bold;\n            text-align: center;\n        }\n\n        & .workout-item__detail div{\n            text-align: center;\n        }\n\n        & .workout-item__detail h2{\n            margin: 0;\n            text-align: center;\n        }\n\n        & .workout-item__buttons{\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-around;\n            padding: 0 3%;\n        }\n\n        & .workout-item__buttons button{\n            background: none;\n            border : none;\n            cursor: pointer;\n            padding: 5px;\n        }\n\n        & .workout-item__icon{\n            color: #fff;\n        }\n\n        &:nth-child(2n) .workout-item__icon{\n            color: #333;\n        }\n    `;\n\n    const deleteHandler = (workoutId) => {\n        dispatch(deleteWorkout(workoutId));\n    }\n\n    \n    return (\n        <StyledWorkoutItem>\n            <Card>\n                <div className=\"workout-item\">\n                    <div className=\"workout-item__date\">\n                        <WorkoutDate date={workout.date}/>\n                    </div>\n                    <div className=\"workout-item__detail\">\n                        <h2>{workout.title}</h2>\n                        <div>{workout.time}</div>\n                    </div>\n                    <div className=\"workout-item__buttons\">\n                        <button onClick={() => {deleteHandler(workout.id)}}><FontAwesomeIcon icon={faTrashAlt} className=\"workout-item__icon\"/></button>\n                        {/* <button><FontAwesomeIcon icon={faEdit} className=\"workout-item__icon\"/></button> */}\n                    </div>\n                </div>\n                    {/* <button onClick={clickHandler}>Change</button>            */}\n            </Card>\n        </StyledWorkoutItem>\n    )\n}\n\nexport default WorkoutItem\n","export function addWorkout(workout){\n    return{\n        type: \"workoutAdded\",\n        payload : workout\n    }\n}\n\nexport function deleteWorkout(workoutId){\n    return{\n        type: \"workoutDeleted\",\n        payload : workoutId\n    }\n}\n","import styled from 'styled-components'\n\nconst Button = styled.button`\n    display: block;\n    line-height: 32px;\n    padding: 0 5%;\n    border: 1px solid #A33636;\n    border-radius: 20px;\n    color: #fff;\n    font-weight: bold;\n    box-shadow: 0 0 4px rgb(0, 0, 0, 0.3);\n    cursor: pointer;\n    margin: auto;\n    background: #A33636;\n\n    &:focus{\n        outline: none;\n    }\n\n    &:hover,\n    &:active{\n        background: #fff;\n        color: #A33636;\n    }\n\n`;\n\nexport default Button\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport WorkoutItem from './WorkoutItem';\nimport styled from 'styled-components';\nimport Button from '../UI/Button';\n\nfunction WorkoutList({workouts}) {\n\n    const renderedListItems = workouts.map(workout => {\n        return <WorkoutItem key={workout.id} workout={workout}/>\n    });\n\n    if(workouts.length === 0){\n        return <h2 className=\"workout-list__fallback\">운동기록이 없습니다.</h2>;\n    }\n\n    const StyledWorkoutList = styled.ul`\n        list-style: none;\n        margin: 10px 0;\n        padding: 0;\n    `;\n\n    return (\n        <StyledWorkoutList className=\"workout-list\">\n            {renderedListItems}\n            {/* <Button>더보기 +</Button> */}\n        </StyledWorkoutList>\n    )\n}\n\nexport default WorkoutList\n","import React from 'react'\nimport styled from 'styled-components'\n\nfunction WorkoutFilter(props) {\n    const dropdownChangeHandler = (event) => {\n        props.onChangeFilter(event.target.value);\n    }\n\n    const StyledWorkoutFilter = styled.div`\n        position: absolute;\n        right: 0;\n        top: 0;\n\n        & select{\n            padding: 0 10px;\n            height: 27px;\n        }\n    `;\n\n    return (\n        <StyledWorkoutFilter className='workout-filter'>\n            <div className=\"workout-filter__control\">\n                <select value={props.selected} onChange={dropdownChangeHandler}>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2018\">2018</option>\n                </select>\n            </div>\n        </StyledWorkoutFilter>\n    )\n}\n\nexport default WorkoutFilter\n","import React from 'react'\nimport styled from 'styled-components';\n\nfunction ChartBar(props) {\n    let barFillHeight = '0%';\n\n    if(props.maxValue > 0){\n        barFillHeight = Math.round((props.value / 1800) * 100) + '%';\n    }\n\n    const ChartBar = styled.div`\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        & .chart-bar__inner{\n            height: 100%;\n            width: 100%;\n            overflow: hidden;\n            display: flex;\n            flex-direction: column;\n            justify-content: flex-end;\n        }\n\n        & .chart-bar__fill{\n            background-color: #F77A7A;\n            width: 100%;\n            height: ${barFillHeight};\n            transition: all 0.3s ease-out;\n        }\n\n        & .chart-bar__label{\n            font-weight: bold;\n            font-size: 0.5rem;\n            text-align: center;\n        }\n    `;\n    return (\n            <ChartBar>\n                <div className=\"chart-bar__inner\">\n                    <div className=\"chart-bar__fill\"></div>\n                    <div className=\"chart-bar__label\">{props.label}</div>\n                </div>\n            </ChartBar>\n    )\n}\n\nexport default ChartBar\n","import React from 'react'\nimport ChartBar from './ChartBar'\nimport Card from '../UI/Card';\nimport './Chart.css';\n\nfunction Chart(props) {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n\n    return (\n        <Card className=\"chart\">\n            {props.dataPoints.map(dataPoint => \n                <ChartBar \n                key = {dataPoint.label} \n                value={dataPoint.value} \n                maxValue={totalMaximum}\n                label = {dataPoint.label} \n                />)}\n        </Card>\n    )\n}\n\nexport default Chart\n","import React from 'react'\nimport Chart from '../Chart/Chart'\n\nfunction WorkoutChart(props) {\n    const chartDataPoints = [\n        {label: 'Jan', value : 0},\n        {label: 'Feb', value : 0},\n        {label: 'Mar', value : 0},\n        {label: 'Apr', value : 0},\n        {label: 'May', value : 0},\n        {label: 'Jun', value : 0},\n        {label: 'Jul', value : 0},\n        {label: 'Aug', value : 0},\n        {label: 'Sep', value : 0},\n        {label: 'Oct', value : 0},\n        {label: 'Nov', value : 0},\n        {label: 'Dec', value : 0},\n    ];\n\n    console.log(props);\n\n    for(const workout of props.workout){\n        const workoutTime = workout.time;\n\n        //운동시간 -> 시간/분을 분리\n        let hourSlice = workoutTime.slice(0, 2);\n        let timeSlice = workoutTime.slice(3);\n\n        //시간 * 60 + 분을 계산해서 차트 값 구하기\n        let timeCal = parseInt(hourSlice) * 60 + parseInt(timeSlice);\n\n        //운동 날짜의 Month를 chartDataPoints 키 값으로 사용하여 차트 값 넣기\n        const workoutMonth = workout.date.getMonth(); // Starting at 0(Jan)\n        chartDataPoints[workoutMonth].value += timeCal;\n    }\n\n    return (\n        <div>\n            <Chart dataPoints={chartDataPoints}/>\n        </div>\n    )\n}\n\nexport default WorkoutChart\n","export const GET_VEDIOS = \"GET_VIDEOS\";\nconst SET_VIDEOS = \"SET_VIDEOS\";\n\nexport const getVideos = (keyword) => ({\n    type : GET_VEDIOS,\n    keyword\n});\n\nexport const setVideos = (videos) => ({\n    type: SET_VIDEOS,\n    payload : videos\n});\n\nconst initialState= {\n    videoList : []\n}\n\nexport default function videosReducer(state = initialState, action){\n    switch(action.type){\n        case SET_VIDEOS:\n            return{\n                ...state, \n                videoList : action.payload\n            }\n        default: {\n            return state;\n        }\n    }\n}\n\n","export const WORKOUT_ADDED = \"workoutAdded\";\nexport const WORKOUT_DELETED = \"workoutDeleted\";\n","import * as actions from '../_actions/types';\n\nconst workoutState = {\n     workout: [\n      {\n        id: 0,\n        title: '산책',\n        time: '00:50',\n        date: new Date(2020, 7, 14),\n      },\n      { \n        id: 1, \n        title: '테니스',\n        time: '00:50',\n        date: new Date(2021, 2, 12) },\n      {\n        id: 2,\n        title: '테니스',\n        time: '01:10',\n        date: new Date(2021, 2, 28),\n      },\n      {\n        id: 3,\n        title: '산책',\n        time: '01:50',\n        date: new Date(2021, 5, 12),\n      }\n    ]\n  }\n\n  \nexport default function workoutReducer(state = workoutState, action){\n    switch (action.type) {\n        case actions.WORKOUT_ADDED: \n            const workoutData = action.payload;\n            return {\n                ...state,\n                workout : [...state.workout, workoutData]\n            };\n        case actions.WORKOUT_DELETED:\n          // const newWorkout = {...state.workout};\n          // console.log('new workout', newWorkout);\n          // delete newWorkout[action.payload];\n            return{\n              ...state,\n              workout : [...state.workout.filter(item => item.id !== action.payload)]\n            }\n        default:\n            return state;\n    }\n}","export const videoFilters = ['상체', '하체', '복근', '힙'];\nconst SET_FILTER = \"SET_FILTER\";\n\nexport const setFilter = (filter, changeType) => ({\n    type: SET_FILTER,\n    payload : {filter, changeType}\n});\n\nconst initialState = {\n    filter : videoFilters\n}\n\nexport default function filterReducer(state = initialState, action){\n    switch(action.type){\n        case SET_FILTER:\n            let { filter, changeType } = action.payload;\n\n            switch(changeType){\n                case 'added':{\n                    return{\n                        ...state,\n                        filter : [...state.filter, filter]\n                    }\n                }\n                \n                case 'removed':{\n                    return{\n                        ...state,\n                        filter : state.filter.filter(\n                            (exisitingFilter) => exisitingFilter !== filter\n                        )\n                    }\n                }\n                default:{\n                    return state;\n                }\n            }\n        default:{\n            return state;\n        }\n    }\n}","import { combineReducers } from 'redux';\nimport videosReducer from './videoSlice';\nimport workoutsReducer from './workoutsSlice';\nimport filterReducer from './filterSlice';\n\nconst rootReducer = combineReducers({\n    workouts : workoutsReducer,\n    videos : videosReducer,\n    filters : filterReducer\n})\n\nexport default rootReducer;","import { createStore } from 'redux';\nimport rootReducer from '../_reducers/reducers';\n\nlet preloadedState;\nconst persistedWorkoutsString = localStorage.getItem('workouts')\n\nif(persistedWorkoutsString){\n  preloadedState = {\n    workouts : JSON.parse(persistedWorkoutsString)\n  }\n}\n\nconst store = createStore(rootReducer, preloadedState);\n\nexport default store","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport WorkoutList from './WorkoutList';\nimport WorkoutFilter from './WorkoutFilter';\nimport WorkoutChart from './WorkoutChart';\nimport './Workouts.css'\nimport store from '../../_store/store';\n\nfunction Workouts() {\n    console.log('state', store.getState());\n    const workouts = useSelector(state => state.workouts.workout);\n    console.log('workouts', workouts);\n\n    const [filteredYear, setFilteredYear] = useState('2021');\n\n    const filterChangeHanlder = selectedYear => {\n        setFilteredYear(selectedYear);\n    }\n\n\n\n    const sortedByDate = (a,b) => {\n        let c = new Date(a.date);\n        let d = new Date(b.date);\n        return c > d ? -1 : 1;\n    };\n\n    console.log('sort by date', workouts.sort(sortedByDate));\n\n    const fiteredWorkout = workouts.filter(workout => {\n        return workout.date.getFullYear().toString() === filteredYear;\n    });\n    \n\n    return (\n        <div className=\"workouts-block\">\n            <div className=\"workout-block__chart\">\n                <h3>운동통계</h3>\n                <WorkoutFilter selected={filteredYear} onChangeFilter={filterChangeHanlder} />\n                <WorkoutChart workout={fiteredWorkout}/>\n            </div>\n\n            <div className=\"workout-block__record\">\n                <h3>운동기록</h3>\n                <WorkoutList workouts={fiteredWorkout}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Workouts\n","import React, {useState} from 'react'\nimport styled from 'styled-components';\n\nfunction TimePicker(props) {\n    \n    const [clickedHour, setClickedHour] = useState('');\n    const [clickedMinutes, setClickedMinutes] = useState('');\n\n    const StyledTimePicker = styled.div`\n        display: flex;\n        height: 100px;\n        margin: 1rem 0;\n\n        & .TimePicker__hour,\n        & .TimePicker__minute{\n            display: flex;\n            flex-direction: column;\n            overflow-y: scroll;\n        }\n\n        & .TimePicker__hour,\n        & .TimePicker__minute::-webkit-scrollbar-thumb{\n            \n        }\n\n        & button{\n            border: none;\n            cursor: pointer;\n            background: #fff;\n            font-size: 16px;\n            color: #d2d2d2;\n\n        }\n\n        & .clicked{\n            color : #333;\n            font-weight: bold;\n        }\n    `;\n\n    const hourClickHandler = (hour) => {\n        setClickedHour(hour);\n    }\n\n    const minuteClickHandler = (minutes) =>{\n        setClickedMinutes(minutes);\n\n        if(clickedHour !== ''){\n            let settingHour = clickedHour < 10 ? '0' + clickedHour : clickedHour;\n            let settingMinutes = minutes < 10 ? '0' + minutes : minutes;\n            props.onTimeHandler(settingHour + ':' + settingMinutes);\n        }\n    } \n\n    return (\n        <StyledTimePicker>\n            <div className=\"TimePicker__hour\">\n                {[...Array(12)].map((v,hour) => \n                    <button\n                        key={hour}\n                        onClick={() => hourClickHandler(hour)} \n                        className={clickedHour === hour ? 'clicked' : ''}>\n                        {hour}시간\n                    </button>)}\n            </div>\n            \n            <div className=\"TimePicker__minute\">\n                {[...Array(60)].map((v,minutes) => \n                    <button\n                        key={minutes}\n                        onClick={() => minuteClickHandler(minutes)}\n                        className={clickedMinutes === minutes ? 'clicked': ''}>\n                        {minutes}분\n                    </button>)}\n            </div>\n        </StyledTimePicker>\n    )\n}\n\nexport default TimePicker\n","import React, { useState } from 'react';\nimport Button from '../UI/Button';\nimport Card from '../UI/Card';\nimport './WorkoutForm.css';\nimport TimePicker from '../TimePicker/TimePicker';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addWorkout } from '../../_actions/actions';\nimport store from '../../_store/store';\n\nfunction WorkoutForm(props) {\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredTime, setEnteredTime] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n    const dispatch = useDispatch();\n    const workouts = useSelector(state => state.workouts.workout);\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    \n        // setUserInput({\n        //     ...userInput,\n        //     enteredTitle: event.target.value\n        // });\n        \n        //Latest state snapshot\n        //Keeping all scheduled state upadtes in mind\n        // setUserInput((prevState) => {\n        //     return{ ...prevState, enterTitle: event.target.value};\n        // })\n    };\n\n    const timeChangeHandler = (time) => {\n        setEnteredTime(time);\n    };\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    };\n\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        //새로운 아이디 생성하기\n        const workoutId = workouts.map(workout => workout.id);\n        const createdWorkoutId = Math.max(...workoutId) + 1;\n\n        if(!enteredTitle || !enteredTime || !enteredDate){\n            alert('모든 항목을 입력하셔야 합니다.');\n            return;\n        }\n        const workoutData = {\n            id : createdWorkoutId,\n            title: enteredTitle,\n            time: enteredTime,\n            date: new Date(enteredDate)\n        };\n\n        //store에 저장할 데이터 dispatch\n        dispatch(addWorkout(workoutData));\n\n        //child -> parent props 전달\n        //Lifting State Up\n        props.onSaveWorkoutData(false);\n\n        //입력된 데이터 초기화\n        setEnteredTitle('');\n        setEnteredTime('');\n        setEnteredDate('');\n    };\n    \n    const cancelHandler = () => {\n        props.offAddWorkout(false);\n    }\n\n\n    return (\n        <Card>\n                <form onSubmit={submitHandler} className=\"new-workout\">\n                    <div className=\"new-workout__controls\">\n                        <button type=\"button\" onClick={cancelHandler} className=\"new-workout__cancel\">&times;</button>\n                        <div className=\"new-workout__control\">\n                            <label>날짜</label>\n                            <input type=\"date\" value={enteredDate} min=\"2019-01-01\" step=\"2022-12-31\" onChange={dateChangeHandler} />\n                        </div>\n                        <div className=\"new-workout__control\">\n                            <label>운동이름</label>\n                            <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />                  \n                        </div>\n                        <div className=\"new-workout__control\">\n                            <label>시간</label>\n                            <TimePicker onTimeHandler={timeChangeHandler}/>\n                        </div>\n                        <div className=\"new-workout__actions\">\n                            <Button type=\"submit\" className=\"new-workout__submit\">추가</Button>\n                        </div>\n                    </div>\n            </form>\n        </Card>\n        \n    )\n}\n\nexport default WorkoutForm\n","import React, { useState } from 'react';\nimport WorkoutForm from './WorkoutForm';\nimport Button from '../UI/Button';\nimport styled from 'styled-components';\n\nfunction NewWorkout(props) {\n    const [isOpen, setIsOpen] = useState(false);\n    \n    const saveWorkoutDataHandler = (status) => {\n        // const workoutData= {\n        //     ...enteredWorkoutData,\n        //     id: Math.random().toString()\n        // };\n        \n        // props.onAddWorkout(workoutData);\n        setIsOpen(status);\n    };\n\n    const StyledNewWork = styled.div`\n        background-image: url('image/workout.jpg');\n        background-size: 100%;\n        background-position: 5px -181px;\n        margin: auto;\n        padding: 10% 0;\n        border-radius: 10px;\n\n        & button{\n            display: block;\n        }\n    `;\n\n    \n\n\n    return (\n        <div className=\"new-workout\">     \n            {isOpen ?\n                <WorkoutForm \n                onSaveWorkoutData={saveWorkoutDataHandler} offAddWorkout={setIsOpen}/> :\n                <StyledNewWork>\n                    <Button onClick={() => {setIsOpen(true)}}>운동기록추가 +</Button>\n                </StyledNewWork>\n            }\n        </div>\n    )\n}\n\nexport default NewWorkout\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Youtube from 'react-youtube';\nimport { useSelector } from 'react-redux'; \nimport { videoFilters } from '../../_reducers/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { getVideos } from '../../_reducers/videoSlice';\n\nfunction Videos() {\n    const [keyword, setKeyword] = useState('');\n\n    const videos = useSelector(state => state.videos.videoList);\n\n    // useEffect(() => {\n    //     async function fetchData(){\n    //         try{\n    //             const response = await axios.get(`https://www.googleapis.com/youtube/v3/search?q=운동&key=${process.env.REACT_APP_YOUTUBE_KEY}`);\n    //             setVideoItems(response.data.items);\n    //         }catch(error){\n    //             console.error(error);\n    //         }               \n    //     }\n\n    //     fetchData();\n    \n    // }, []);\n\n    const StyledVideopage = styled.div`\n\n        & .video__filter{\n            display: flex;\n            width: 60%;\n            justify-content: space-between;\n            margin-bottom: 2rem;\n        }\n\n        & .video__filter button{\n            display: block;\n            padding: 0.3rem 1rem;\n            border: 1px solid #ddd;\n            border-radius: 15px;\n            background: #fff;\n            color: #ddd;\n            cursor: pointer;\n        }\n\n        & .video__filter button.active{\n            background: #333;\n            color: #fff;\n            font-weight: bold;\n            border-color: #333;\n        }\n\n        & .video__filter button.active:hover{\n            color: #fff;\n        }\n\n\n\n        & .video__filter button:hover{\n            border-color: #333;\n            color: #333;\n        }\n\n        \n        & .video__items{\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n\n        & .video__item{\n            padding: 1rem 0;\n        }\n    `;\n    //Youtube 설정\n    const opts = {\n        height: '200',\n        width: '360'\n    }\n\n    const dispatch = useDispatch();\n\n    const loadVideos = (item) => {\n        dispatch(getVideos(item));\n        setKeyword(item);\n    }\n\n    const renderFilters = videoFilters.map((item, index) => {\n        return(\n            <button onClick={()=> loadVideos(item)} \n                    className= {keyword === item ? 'active' : ''}\n                    key={index}>{item}</button>\n        )\n    })\n\n    const renderVideos = videos.map((item) => {\n        return(\n            <div className=\"video__item\" key={item.id.videoId}>\n                <Youtube videoId={item.id.videoId} opts={opts}/>\n            </div>\n        )\n    }\n    ) \n\n\n    return (\n        <StyledVideopage>\n            <h5>운동부위 선택</h5>\n            <div className=\"video__filter\">\n                {renderFilters}\n            </div>\n            <div className=\"video__items\">\n                {renderVideos}\n            </div>\n        </StyledVideopage>\n    )\n}\n\nexport default Videos\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link, useHistory } from 'react-router-dom';\nimport { set } from 'mongoose';\n\n\nfunction Navigation(match) {\n\n    const StyeldNavigation = styled.nav`\n        & .member{\n            display: flex;\n            justify-content: space-between ;\n            margin-bottom: 2rem;\n        }\n\n        & .member__message{\n            font-size: 14px;\n        }\n\n        & .menu{\n            width: 100%;\n            margin-bottom: 2rem;\n            border-bottom: 1px solid #ddd;\n            display: flex;\n        }\n\n        & .menu button{\n            border: none;\n            background: #fff;\n            font-size: 1rem;\n            padding: 0;\n        }\n\n        & .menu a{\n            display: block;\n            text-decoration: none;\n            color: #ddd;\n            padding: 1rem 1rem 0.5rem;\n            position: relative;\n        }\n\n        & .menu button.active a{\n            font-weight: bold;\n            color: #333;\n            font-weight: bold;\n            text-align: center;\n        }\n\n        & .menu button.active a::after{\n            content: '';\n            display: block;\n            width: 100%;\n            height: 2px;\n            background: #333;\n            position: absolute;\n            bottom: 0;\n            left: 0;\n        }\n\n    `;\n\n    const StyledButton = styled.button`\n        display: block;\n        width: 100px;\n        line-height: 32px;\n        padding: 0 5%;\n        border: 1px solid #333;\n        border-radius: 20px;\n        color: #333;\n        background: #fff;\n        font-weight: bold;\n        cursor: pointer;\n        margin: auto;\n    `;\n\n    const [recordActive, setRecordActive] = useState(true);\n    const [videoActive, setVideoActive] = useState(false);\n\n    let params = useHistory();\n    \n    useEffect(() => {\n        if(params.location.pathname===\"/videos\"){\n            setVideoActive(true);\n            setRecordActive(false);\n        }\n    }, [])\n    const isActive = (active) => {\n        if(active === 'record'){\n            setRecordActive(true);\n            setVideoActive(false);\n        }\n\n        if(active === 'video'){\n            setVideoActive(true);\n            setRecordActive(false);\n        }\n    }\n    return (\n        <div>\n            <StyeldNavigation className=\"navigation\">\n                <div className=\"member\">\n                    <div className=\"member__message\"> \n                        회원님, <br/> 운동을 기록하세요.\n                    </div>\n                    <div className=\"memeber__button\">\n                        {/* <StyledButton>로그아웃</StyledButton> */}\n                    </div>\n                </div>\n                <div className=\"menu\">\n                    <button className={recordActive? 'active': ''} onClick={() => isActive('record')}><Link to=\"/\">기록</Link></button>\n                    <button className={videoActive? 'active': ''} onClick={() => isActive('video')}><Link to=\"/videos\">운동영상</Link></button>\n                </div>\n            </StyeldNavigation>\n        </div>\n    )\n}\n\nexport default Navigation\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Workouts from './components/Workouts/Workouts';\nimport NewWorkout from './components/NewWorkout/NewWorkout';\nimport Videos from './components/Videos/Videos';\nimport './App.css'\nimport Navigation from './components/Header/Navigation';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  const [workouts, setWorkouts] = useState();\n\n  const addWorkoutHandler = workout =>{\n    setWorkouts((prevWorkouts) => {\n      return [workout, ...prevWorkouts];\n    });\n  };\n\n  const deleteWorkoutHandler = id =>{\n    setWorkouts(workouts.filter(workout => workout.id !== id));\n  }\n\n\n  \n  return (\n\n    <div className=\"workouts\">\n      <Router>\n      <Navigation />\n      <Switch>\n          <Route exact path=\"/\">\n            <NewWorkout onAddWorkout={addWorkoutHandler}/>\n            <Workouts items={workouts} onDeleteWorkout={deleteWorkoutHandler}/>\n          </Route>\n          <Route path=\"/:videos\">\n            <Videos />\n          </Route>\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nexport function requestGetVideos(keyword){\n    console.log(keyword);\n    return axios.request({\n        method: 'get',\n        url: \"https://www.googleapis.com/youtube/v3/search?q=\" + keyword + \"운동&key=\" + process.env.REACT_APP_YOUTUBE_KEY\n    })\n}","import { call, put } from '@redux-saga/core/effects';\nimport { requestGetVideos } from '../request/videoRequest';\nimport { setVideos } from '../../_reducers/videoSlice';\n\nexport function* handleGetVideos(item){\n    try{\n        const response = yield call(requestGetVideos, item.keyword);\n        const { data } = response;\n        yield put(setVideos(data.items));\n    }catch(error){\n        console.log(error);\n    }\n}\n","import { all, takeLatest } from 'redux-saga/effects';\nimport { GET_VEDIOS } from '../_reducers/videoSlice';\nimport { handleGetVideos } from './handler/videoHandler';\n\n//watcher saga\nexport function* rootSaga(){\n    yield all([\n        watcherSaga()\n    ]);\n}\n\nexport function* watcherSaga(){\n    yield takeLatest(GET_VEDIOS, handleGetVideos);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './_reducers/reducers';\nimport { rootSaga } from './_sagas/sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}